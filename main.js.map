{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game-list/game-list-datasource.ts","webpack:///./src/app/game-list/game-list.component.css","webpack:///./src/app/game-list/game-list.component.html","webpack:///./src/app/game-list/game-list.component.ts","webpack:///./src/app/game-search/game-search.component.css","webpack:///./src/app/game-search/game-search.component.html","webpack:///./src/app/game-search/game-search.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/models/GameListSearchDTO.ts","webpack:///./src/app/services/bggapi.service.ts","webpack:///./src/app/side-nav/side-nav.component.css","webpack:///./src/app/side-nav/side-nav.component.html","webpack:///./src/app/side-nav/side-nav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-side-nav></app-side-nav>\\n<!-- <app-home></app-home> -->\\n<!-- <app-game-list></app-game-list> -->\\n<app-game-search></app-game-search>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { LayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule,\n} from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ReactiveFormsModule } from '../../node_modules/@angular/forms';\nimport { AppComponent } from './app.component';\nimport { GameListComponent } from './game-list/game-list.component';\nimport { GameSearchComponent } from './game-search/game-search.component';\nimport { HomeComponent } from './home/home.component';\nimport { BGGApiService } from './services/bggapi.service';\nimport { SideNavComponent } from './side-nav/side-nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameListComponent,\n    HomeComponent,\n    SideNavComponent,\n    GameSearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    HttpClientModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatSliderModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [BGGApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { merge, Observable, of as observableOf } from 'rxjs';\n\nimport { map } from '../../../node_modules/rxjs/operators';\nimport { GameListItem } from '../models/GameListItem';\nimport { BGGApiService } from '../services/bggapi.service';\n\nexport class GameListDataSource extends DataSource<GameListItem> {\n  data: GameListItem[] = [];\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, private bggAPI: BGGApiService) {\n    super();\n    this.bggAPI.getGameList().subscribe(e => this.data = e);\n\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<GameListItem[]> {\n\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  filter(value: string) {\n    this.data = this.bggAPI.getSearchedList(value);\n    // console.log(this.bggAPI.getSearchedList(value));\n  }\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() { }\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: GameListItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: GameListItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.gameId, +b.gameId, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Search for Game\\\" (keyup)=\\\"applyFilter($event.target.value)\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n    <mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n\\n        <ng-container matColumnDef=\\\"gameId\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.gameId}}</mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"minPlayers\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Min Players</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.minPlayers}}</mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"maxPlayers\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Max Players</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.maxPlayers}}</mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"thumbnail\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n                <img src={{row.thumbnail}}>\\n            </mat-cell>\\n        </ng-container>\\n\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n\\n    <mat-paginator #paginator [length]=\\\"dataSource.data.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"50\\\" [pageSizeOptions]=\\\"[25, 50, 100, 250,1000]\\\">\\n    </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\n\nimport { BGGApiService } from '../services/bggapi.service';\nimport { GameListDataSource } from './game-list-datasource';\n\n@Component({\n  selector: 'app-game-list',\n  templateUrl: './game-list.component.html',\n  styleUrls: ['./game-list.component.css']\n})\nexport class GameListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: GameListDataSource;\n\n  constructor(private bggAPI: BGGApiService) {\n\n  }\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['gameId', 'name', 'minPlayers', 'maxPlayers', 'thumbnail'];\n\n  ngOnInit() {\n    this.dataSource = new GameListDataSource(this.paginator, this.sort, this.bggAPI);\n  }\n  // filtration\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter(filterValue);\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-accordion>\\n    <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n            <h2>Game Search</h2>\\n        </mat-expansion-panel-header>\\n        <form [(formGroup)]=\\\"gameSearchForm\\\" class=\\\"example-form\\\">\\n            <label for=\\\"playerNum\\\">Number of Players</label>\\n            <mat-slider min=\\\"1\\\" max=\\\"20\\\" step=\\\"1\\\" value=\\\"10\\\" vertical thumbLabel formControlName=\\\"numberOfPlayers\\\"></mat-slider>\\n            <label for=\\\"playerNum\\\">Min Time to Play</label>\\n            <mat-slider min=\\\"10\\\" max=\\\"120\\\" step=\\\"10\\\" value=\\\"10\\\" thumbLabel formControlName=\\\"minTimeToPlay\\\"></mat-slider>\\n            <div>\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"search()\\\">Gimmie Games</button>\\n            </div>\\n        </form>\\n    </mat-expansion-panel>\\n    <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n            Results {{filteredGameList.length}}\\n        </mat-expansion-panel-header>\\n        <mat-card class=\\\"example-card\\\" *ngFor=\\\"let game of filteredGameList\\\">\\n            <mat-card-header>\\n                <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n                <mat-card-title>{{game.name}}</mat-card-title>\\n            </mat-card-header>\\n            <img mat-card-image src=\\\"{{game.image}}\\\" alt=\\\" \\\">\\n        </mat-card>\\n    </mat-expansion-panel>\\n</mat-accordion>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { GameListItem } from '../models/GameListItem';\nimport { GameListSearchDTO } from '../models/GameListSearchDTO';\nimport { BGGApiService } from '../services/bggapi.service';\n\n@Component({\n  selector: 'app-game-search',\n  templateUrl: './game-search.component.html',\n  styleUrls: ['./game-search.component.css']\n})\nexport class GameSearchComponent implements OnInit {\n  public gameSearchForm: FormGroup;\n  private gameList: GameListItem[] = [];\n  private gameSearchObject: GameListSearchDTO = new GameListSearchDTO();\n  private filteredGameList: GameListItem[] = [];\n  constructor(private formBuilder: FormBuilder, private BGGApi: BGGApiService) { }\n\n  ngOnInit() {\n    this.createForm();\n    console.log(this.gameSearchForm);\n    this.BGGApi.getGameList().subscribe(e => this.gameList = e);\n  }\n\n  createForm() {\n    this.gameSearchForm = this.formBuilder.group(this.gameSearchObject);\n  }\n\n  search() {\n    this.gameSearchObject = (this.gameSearchForm.value);\n    this.filteredGameList = this.gameList\n      .filter(\n        g => (g.minPlayers >= this.gameSearchObject.numberOfPlayers || g.maxPlayers <= this.gameSearchObject.numberOfPlayers)\n          && (g.playingTime >= this.gameSearchObject.minTimeToPlay)\n      );\n  }\n}\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Component } from '@angular/core';\n\nimport { BGGApiService } from '../services/bggapi.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  constructor(private bggapi: BGGApiService) {\n    this.bggapi.getGameList();\n  }\n  cards = [\n    { title: 'Games', cols: 2, rows: 1 },\n    { title: 'Card 2', cols: 1, rows: 1 },\n    { title: 'Card 3', cols: 1, rows: 2 },\n    { title: 'Card 4', cols: 1, rows: 1 }\n  ];\n}\n","export class GameListSearchDTO {\n    numberOfPlayers = 0;\n    minTimeToPlay = 0;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from '../../../node_modules/rxjs';\nimport { GameListItem } from '../models/GameListItem';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BGGApiService {\n\n  private _userName = 'edwalter';\n  private _gameList: Observable<any>;\n  private _filteredList: GameListItem[] = [];\n\n  constructor(private http: HttpClient) {\n    this.http.get('https://bgg-json.azurewebsites.net/collection/' + this._userName)\n      .pipe(e => this._gameList = e);\n  }\n\n  public get userName() {\n    return this._userName;\n  }\n  public set userName(value) {\n    this._userName = value;\n  }\n\n  getGameList() {\n    return (this._gameList);\n  }\n  getSearchedList(searchString: string) {\n    this._gameList.subscribe(e => this._filteredList = e);\n    return this._filteredList.filter(e => e.name.includes(searchString));\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav-content>\\n        <mat-toolbar color=\\\"primary\\\">\\n            <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n            <span>Gimmie Dem Games</span>\\n        </mat-toolbar>\\n    </mat-sidenav-content>\\n\\n</mat-sidenav-container>\"","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.css']\n})\nexport class SideNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) { }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}